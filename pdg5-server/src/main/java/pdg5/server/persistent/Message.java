package pdg5.server.persistent;

import java.util.Date;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Message generated by hbm2java
 */
@Entity
@Table(name = "message", catalog = "pdg")
public class Message implements java.io.Serializable {

	private Integer id;
	private Chat chat;
	private User user;
	private String content;
	private Date created;

	public Message() {
	}

	public Message(Chat chat, User user, String content, Date created) {
		this.chat = chat;
		this.user = user;
		this.content = content;
		this.created = created;
	}

	@Id
	@GeneratedValue(strategy = IDENTITY)

	@Column(name = "ID", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "chat", nullable = false)
	public Chat getChat() {
		return this.chat;
	}

	public void setChat(Chat chat) {
		this.chat = chat;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "user", nullable = false)
	public User getUser() {
		return this.user;
	}

	public void setUser(User user) {
		this.user = user;
	}

	@Column(name = "content", nullable = false, length = 45)
	public String getContent() {
		return this.content;
	}

	public void setContent(String content) {
		this.content = content;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "created", nullable = false, length = 19)
	public Date getCreated() {
		return this.created;
	}

	public void setCreated(Date created) {
		this.created = created;
	}
	
	@Override
	public boolean equals(Object obj) {
		if(!(obj instanceof Message))
		{
			return false;
		}
			
		Message b = (Message) obj;
		
		return id == b.getId() &&
				chat.equals(b.getChat()) &&
				content.equals(b.getContent()) &&
				created.equals(b.getCreated()) &&
				user.equals(b.getUser());
	}
	
	@Override
	public String toString() {
		return id + ", " + chat + ", " +  content + ", " +  created + ", " + user;
	}

}
